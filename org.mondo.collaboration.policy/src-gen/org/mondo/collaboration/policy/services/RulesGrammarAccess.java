/*
 * generated by Xtext 2.10.0
 */
package org.mondo.collaboration.policy.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class RulesGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.Rules.Model");
		private final Assignment cPolicyAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cPolicyPolicyParserRuleCall_0 = (RuleCall)cPolicyAssignment.eContents().get(0);
		
		//Model:
		//	policy=Policy;
		@Override public ParserRule getRule() { return rule; }
		
		//policy=Policy
		public Assignment getPolicyAssignment() { return cPolicyAssignment; }
		
		//Policy
		public RuleCall getPolicyPolicyParserRuleCall_0() { return cPolicyPolicyParserRuleCall_0; }
	}
	public class PolicyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.Rules.Policy");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cPolicyKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Assignment cAccessAssignment_1 = (Assignment)cUnorderedGroup.eContents().get(1);
		private final RuleCall cAccessAccessibilityLevelEnumRuleCall_1_0 = (RuleCall)cAccessAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Assignment cOperationAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cOperationOperationTypeEnumRuleCall_2_0_0 = (RuleCall)cOperationAssignment_2_0.eContents().get(0);
		private final Keyword cByKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cDefaultKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cRulesAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final RuleCall cRulesRuleParserRuleCall_2_4_0 = (RuleCall)cRulesAssignment_2_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Keyword cWithKeyword_2_6 = (Keyword)cGroup_2.eContents().get(6);
		private final Assignment cResolutionAssignment_2_7 = (Assignment)cGroup_2.eContents().get(7);
		private final RuleCall cResolutionResolutionTypeEnumRuleCall_2_7_0 = (RuleCall)cResolutionAssignment_2_7.eContents().get(0);
		private final Keyword cResolutionKeyword_2_8 = (Keyword)cGroup_2.eContents().get(8);
		
		//Policy:
		//	'policy' name=ID & access=AccessibilityLevel & operation=OperationType 'by' 'default' '{'
		//	rules+=Rule*
		//	'}' 'with' resolution=ResolutionType 'resolution';
		@Override public ParserRule getRule() { return rule; }
		
		//'policy' name=ID & access=AccessibilityLevel & operation=OperationType 'by' 'default' '{' rules+=Rule* '}' 'with'
		//resolution=ResolutionType 'resolution'
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//'policy' name=ID
		public Group getGroup_0() { return cGroup_0; }
		
		//'policy'
		public Keyword getPolicyKeyword_0_0() { return cPolicyKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0() { return cNameIDTerminalRuleCall_0_1_0; }
		
		//access=AccessibilityLevel
		public Assignment getAccessAssignment_1() { return cAccessAssignment_1; }
		
		//AccessibilityLevel
		public RuleCall getAccessAccessibilityLevelEnumRuleCall_1_0() { return cAccessAccessibilityLevelEnumRuleCall_1_0; }
		
		//operation=OperationType 'by' 'default' '{' rules+=Rule* '}' 'with' resolution=ResolutionType 'resolution'
		public Group getGroup_2() { return cGroup_2; }
		
		//operation=OperationType
		public Assignment getOperationAssignment_2_0() { return cOperationAssignment_2_0; }
		
		//OperationType
		public RuleCall getOperationOperationTypeEnumRuleCall_2_0_0() { return cOperationOperationTypeEnumRuleCall_2_0_0; }
		
		//'by'
		public Keyword getByKeyword_2_1() { return cByKeyword_2_1; }
		
		//'default'
		public Keyword getDefaultKeyword_2_2() { return cDefaultKeyword_2_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_3() { return cLeftCurlyBracketKeyword_2_3; }
		
		//rules+=Rule*
		public Assignment getRulesAssignment_2_4() { return cRulesAssignment_2_4; }
		
		//Rule
		public RuleCall getRulesRuleParserRuleCall_2_4_0() { return cRulesRuleParserRuleCall_2_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_5() { return cRightCurlyBracketKeyword_2_5; }
		
		//'with'
		public Keyword getWithKeyword_2_6() { return cWithKeyword_2_6; }
		
		//resolution=ResolutionType
		public Assignment getResolutionAssignment_2_7() { return cResolutionAssignment_2_7; }
		
		//ResolutionType
		public RuleCall getResolutionResolutionTypeEnumRuleCall_2_7_0() { return cResolutionResolutionTypeEnumRuleCall_2_7_0; }
		
		//'resolution'
		public Keyword getResolutionKeyword_2_8() { return cResolutionKeyword_2_8; }
	}
	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.Rules.Rule");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cRuleKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Assignment cAccessAssignment_1 = (Assignment)cUnorderedGroup.eContents().get(1);
		private final RuleCall cAccessAccessibilityLevelEnumRuleCall_1_0 = (RuleCall)cAccessAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Assignment cOperationAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cOperationOperationTypeEnumRuleCall_2_0_0 = (RuleCall)cOperationAssignment_2_0.eContents().get(0);
		private final Keyword cToKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cUserAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cUserUserParserRuleCall_2_2_0 = (RuleCall)cUserAssignment_2_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Keyword cSelectKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Assignment cAssetAssignment_2_5 = (Assignment)cGroup_2.eContents().get(5);
		private final RuleCall cAssetAssetTypeEnumRuleCall_2_5_0 = (RuleCall)cAssetAssignment_2_5.eContents().get(0);
		private final Keyword cFromKeyword_2_6 = (Keyword)cGroup_2.eContents().get(6);
		private final Keyword cQueryKeyword_2_7 = (Keyword)cGroup_2.eContents().get(7);
		private final Assignment cQueryAssignment_2_8 = (Assignment)cGroup_2.eContents().get(8);
		private final RuleCall cQueryQueryParserRuleCall_2_8_0 = (RuleCall)cQueryAssignment_2_8.eContents().get(0);
		private final Group cGroup_2_9 = (Group)cGroup_2.eContents().get(9);
		private final Keyword cWhereKeyword_2_9_0 = (Keyword)cGroup_2_9.eContents().get(0);
		private final Keyword cBoundKeyword_2_9_1 = (Keyword)cGroup_2_9.eContents().get(1);
		private final Keyword cToKeyword_2_9_2 = (Keyword)cGroup_2_9.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_2_10 = (Keyword)cGroup_2.eContents().get(10);
		private final Group cGroup_2_11 = (Group)cGroup_2.eContents().get(11);
		private final Keyword cWithKeyword_2_11_0 = (Keyword)cGroup_2_11.eContents().get(0);
		private final Assignment cPriorityAssignment_2_11_1 = (Assignment)cGroup_2_11.eContents().get(1);
		private final RuleCall cPriorityINTTerminalRuleCall_2_11_1_0 = (RuleCall)cPriorityAssignment_2_11_1.eContents().get(0);
		private final Keyword cPriorityKeyword_2_11_2 = (Keyword)cGroup_2_11.eContents().get(2);
		
		//Rule:
		//	'rule' name=ID & access=AccessibilityLevel & operation=OperationType 'to' user=User '{'
		//	'select' asset=AssetType
		//	'from' 'query' query=Query ('where' 'bound' 'to')?
		//	'}' ('with' priority=INT 'priority')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'rule' name=ID & access=AccessibilityLevel & operation=OperationType 'to' user=User '{' 'select' asset=AssetType 'from'
		//'query' query=Query ('where' 'bound' 'to')? '}' ('with' priority=INT 'priority')?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//'rule' name=ID
		public Group getGroup_0() { return cGroup_0; }
		
		//'rule'
		public Keyword getRuleKeyword_0_0() { return cRuleKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0() { return cNameIDTerminalRuleCall_0_1_0; }
		
		//access=AccessibilityLevel
		public Assignment getAccessAssignment_1() { return cAccessAssignment_1; }
		
		//AccessibilityLevel
		public RuleCall getAccessAccessibilityLevelEnumRuleCall_1_0() { return cAccessAccessibilityLevelEnumRuleCall_1_0; }
		
		//operation=OperationType 'to' user=User '{' 'select' asset=AssetType 'from' 'query' query=Query ('where' 'bound' 'to')?
		//'}' ('with' priority=INT 'priority')?
		public Group getGroup_2() { return cGroup_2; }
		
		//operation=OperationType
		public Assignment getOperationAssignment_2_0() { return cOperationAssignment_2_0; }
		
		//OperationType
		public RuleCall getOperationOperationTypeEnumRuleCall_2_0_0() { return cOperationOperationTypeEnumRuleCall_2_0_0; }
		
		//'to'
		public Keyword getToKeyword_2_1() { return cToKeyword_2_1; }
		
		//user=User
		public Assignment getUserAssignment_2_2() { return cUserAssignment_2_2; }
		
		//User
		public RuleCall getUserUserParserRuleCall_2_2_0() { return cUserUserParserRuleCall_2_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_3() { return cLeftCurlyBracketKeyword_2_3; }
		
		//'select'
		public Keyword getSelectKeyword_2_4() { return cSelectKeyword_2_4; }
		
		//asset=AssetType
		public Assignment getAssetAssignment_2_5() { return cAssetAssignment_2_5; }
		
		//AssetType
		public RuleCall getAssetAssetTypeEnumRuleCall_2_5_0() { return cAssetAssetTypeEnumRuleCall_2_5_0; }
		
		//'from'
		public Keyword getFromKeyword_2_6() { return cFromKeyword_2_6; }
		
		//'query'
		public Keyword getQueryKeyword_2_7() { return cQueryKeyword_2_7; }
		
		//query=Query
		public Assignment getQueryAssignment_2_8() { return cQueryAssignment_2_8; }
		
		//Query
		public RuleCall getQueryQueryParserRuleCall_2_8_0() { return cQueryQueryParserRuleCall_2_8_0; }
		
		//('where' 'bound' 'to')?
		public Group getGroup_2_9() { return cGroup_2_9; }
		
		//'where'
		public Keyword getWhereKeyword_2_9_0() { return cWhereKeyword_2_9_0; }
		
		//'bound'
		public Keyword getBoundKeyword_2_9_1() { return cBoundKeyword_2_9_1; }
		
		//'to'
		public Keyword getToKeyword_2_9_2() { return cToKeyword_2_9_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_10() { return cRightCurlyBracketKeyword_2_10; }
		
		//('with' priority=INT 'priority')?
		public Group getGroup_2_11() { return cGroup_2_11; }
		
		//'with'
		public Keyword getWithKeyword_2_11_0() { return cWithKeyword_2_11_0; }
		
		//priority=INT
		public Assignment getPriorityAssignment_2_11_1() { return cPriorityAssignment_2_11_1; }
		
		//INT
		public RuleCall getPriorityINTTerminalRuleCall_2_11_1_0() { return cPriorityINTTerminalRuleCall_2_11_1_0; }
		
		//'priority'
		public Keyword getPriorityKeyword_2_11_2() { return cPriorityKeyword_2_11_2; }
	}
	public class UserElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.Rules.User");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//User:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class QueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.Rules.Query");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Query:
		//	name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//name=STRING
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0() { return cNameSTRINGTerminalRuleCall_0; }
	}
	public class ObjectFactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.Rules.ObjectFact");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObjKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cObjectAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cObjectEObjectCrossReference_1_0 = (CrossReference)cObjectAssignment_1.eContents().get(0);
		private final RuleCall cObjectEObjectIDTerminalRuleCall_1_0_1 = (RuleCall)cObjectEObjectCrossReference_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeEClassCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeEClassIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeEClassCrossReference_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ObjectFact:
		//	'obj(' object=[ecore::EObject] ',' type=[ecore::EClass] ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'obj(' object=[ecore::EObject] ',' type=[ecore::EClass] ')'
		public Group getGroup() { return cGroup; }
		
		//'obj('
		public Keyword getObjKeyword_0() { return cObjKeyword_0; }
		
		//object=[ecore::EObject]
		public Assignment getObjectAssignment_1() { return cObjectAssignment_1; }
		
		//[ecore::EObject]
		public CrossReference getObjectEObjectCrossReference_1_0() { return cObjectEObjectCrossReference_1_0; }
		
		//ID
		public RuleCall getObjectEObjectIDTerminalRuleCall_1_0_1() { return cObjectEObjectIDTerminalRuleCall_1_0_1; }
		
		//','
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }
		
		//type=[ecore::EClass]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//[ecore::EClass]
		public CrossReference getTypeEClassCrossReference_3_0() { return cTypeEClassCrossReference_3_0; }
		
		//ID
		public RuleCall getTypeEClassIDTerminalRuleCall_3_0_1() { return cTypeEClassIDTerminalRuleCall_3_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class ReferenceFactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.Rules.ReferenceFact");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSrcObjectAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSrcObjectEObjectCrossReference_1_0 = (CrossReference)cSrcObjectAssignment_1.eContents().get(0);
		private final RuleCall cSrcObjectEObjectIDTerminalRuleCall_1_0_1 = (RuleCall)cSrcObjectEObjectCrossReference_1_0.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cReferenceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cReferenceEReferenceCrossReference_3_0 = (CrossReference)cReferenceAssignment_3.eContents().get(0);
		private final RuleCall cReferenceEReferenceIDTerminalRuleCall_3_0_1 = (RuleCall)cReferenceEReferenceCrossReference_3_0.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTrgObjectAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cTrgObjectEObjectCrossReference_5_0 = (CrossReference)cTrgObjectAssignment_5.eContents().get(0);
		private final RuleCall cTrgObjectEObjectIDTerminalRuleCall_5_0_1 = (RuleCall)cTrgObjectEObjectCrossReference_5_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ReferenceFact:
		//	'ref(' srcObject=[ecore::EObject] '->' reference=[ecore::EReference] '->' trgObject=[ecore::EObject] ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'ref(' srcObject=[ecore::EObject] '->' reference=[ecore::EReference] '->' trgObject=[ecore::EObject] ')'
		public Group getGroup() { return cGroup; }
		
		//'ref('
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//srcObject=[ecore::EObject]
		public Assignment getSrcObjectAssignment_1() { return cSrcObjectAssignment_1; }
		
		//[ecore::EObject]
		public CrossReference getSrcObjectEObjectCrossReference_1_0() { return cSrcObjectEObjectCrossReference_1_0; }
		
		//ID
		public RuleCall getSrcObjectEObjectIDTerminalRuleCall_1_0_1() { return cSrcObjectEObjectIDTerminalRuleCall_1_0_1; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_2() { return cHyphenMinusGreaterThanSignKeyword_2; }
		
		//reference=[ecore::EReference]
		public Assignment getReferenceAssignment_3() { return cReferenceAssignment_3; }
		
		//[ecore::EReference]
		public CrossReference getReferenceEReferenceCrossReference_3_0() { return cReferenceEReferenceCrossReference_3_0; }
		
		//ID
		public RuleCall getReferenceEReferenceIDTerminalRuleCall_3_0_1() { return cReferenceEReferenceIDTerminalRuleCall_3_0_1; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4() { return cHyphenMinusGreaterThanSignKeyword_4; }
		
		//trgObject=[ecore::EObject]
		public Assignment getTrgObjectAssignment_5() { return cTrgObjectAssignment_5; }
		
		//[ecore::EObject]
		public CrossReference getTrgObjectEObjectCrossReference_5_0() { return cTrgObjectEObjectCrossReference_5_0; }
		
		//ID
		public RuleCall getTrgObjectEObjectIDTerminalRuleCall_5_0_1() { return cTrgObjectEObjectIDTerminalRuleCall_5_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class AttributeFactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.Rules.AttributeFact");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttrKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cObjectAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cObjectEObjectCrossReference_1_0 = (CrossReference)cObjectAssignment_1.eContents().get(0);
		private final RuleCall cObjectEObjectIDTerminalRuleCall_1_0_1 = (RuleCall)cObjectEObjectCrossReference_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cAttributeEAttributeCrossReference_3_0 = (CrossReference)cAttributeAssignment_3.eContents().get(0);
		private final RuleCall cAttributeEAttributeIDTerminalRuleCall_3_0_1 = (RuleCall)cAttributeEAttributeCrossReference_3_0.eContents().get(1);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValueAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValueValueParserRuleCall_5_0 = (RuleCall)cValueAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//AttributeFact:
		//	'attr(' object=[ecore::EObject] ',' attribute=[ecore::EAttribute] ',' value=Value ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'attr(' object=[ecore::EObject] ',' attribute=[ecore::EAttribute] ',' value=Value ')'
		public Group getGroup() { return cGroup; }
		
		//'attr('
		public Keyword getAttrKeyword_0() { return cAttrKeyword_0; }
		
		//object=[ecore::EObject]
		public Assignment getObjectAssignment_1() { return cObjectAssignment_1; }
		
		//[ecore::EObject]
		public CrossReference getObjectEObjectCrossReference_1_0() { return cObjectEObjectCrossReference_1_0; }
		
		//ID
		public RuleCall getObjectEObjectIDTerminalRuleCall_1_0_1() { return cObjectEObjectIDTerminalRuleCall_1_0_1; }
		
		//','
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }
		
		//attribute=[ecore::EAttribute]
		public Assignment getAttributeAssignment_3() { return cAttributeAssignment_3; }
		
		//[ecore::EAttribute]
		public CrossReference getAttributeEAttributeCrossReference_3_0() { return cAttributeEAttributeCrossReference_3_0; }
		
		//ID
		public RuleCall getAttributeEAttributeIDTerminalRuleCall_3_0_1() { return cAttributeEAttributeIDTerminalRuleCall_3_0_1; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//value=Value
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_5_0() { return cValueValueParserRuleCall_5_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.Rules.Value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Value:
		//	INT | STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//INT | STRING
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1() { return cSTRINGTerminalRuleCall_1; }
	}
	
	public class AccessibilityLevelElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.Rules.AccessibilityLevel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cALLOWEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cALLOWAllowKeyword_0_0 = (Keyword)cALLOWEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOBFUSCATEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOBFUSCATEObfuscateKeyword_1_0 = (Keyword)cOBFUSCATEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDENYEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDENYDenyKeyword_2_0 = (Keyword)cDENYEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum AccessibilityLevel:
		//	ALLOW='allow' | OBFUSCATE='obfuscate' | DENY='deny';
		public EnumRule getRule() { return rule; }
		
		//ALLOW='allow' | OBFUSCATE='obfuscate' | DENY='deny'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ALLOW='allow'
		public EnumLiteralDeclaration getALLOWEnumLiteralDeclaration_0() { return cALLOWEnumLiteralDeclaration_0; }
		
		//'allow'
		public Keyword getALLOWAllowKeyword_0_0() { return cALLOWAllowKeyword_0_0; }
		
		//OBFUSCATE='obfuscate'
		public EnumLiteralDeclaration getOBFUSCATEEnumLiteralDeclaration_1() { return cOBFUSCATEEnumLiteralDeclaration_1; }
		
		//'obfuscate'
		public Keyword getOBFUSCATEObfuscateKeyword_1_0() { return cOBFUSCATEObfuscateKeyword_1_0; }
		
		//DENY='deny'
		public EnumLiteralDeclaration getDENYEnumLiteralDeclaration_2() { return cDENYEnumLiteralDeclaration_2; }
		
		//'deny'
		public Keyword getDENYDenyKeyword_2_0() { return cDENYDenyKeyword_2_0; }
	}
	public class OperationTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.Rules.OperationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cREADEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cREADRKeyword_0_0 = (Keyword)cREADEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cREADWRITEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cREADWRITERWKeyword_1_0 = (Keyword)cREADWRITEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum OperationType:
		//	READ='R' | READWRITE='RW';
		public EnumRule getRule() { return rule; }
		
		//READ='R' | READWRITE='RW'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//READ='R'
		public EnumLiteralDeclaration getREADEnumLiteralDeclaration_0() { return cREADEnumLiteralDeclaration_0; }
		
		//'R'
		public Keyword getREADRKeyword_0_0() { return cREADRKeyword_0_0; }
		
		//READWRITE='RW'
		public EnumLiteralDeclaration getREADWRITEEnumLiteralDeclaration_1() { return cREADWRITEEnumLiteralDeclaration_1; }
		
		//'RW'
		public Keyword getREADWRITERWKeyword_1_0() { return cREADWRITERWKeyword_1_0; }
	}
	public class AssetTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.Rules.AssetType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cObjectFactEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cObjectFactObjectFactKeyword_0_0 = (Keyword)cObjectFactEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cReferenceFactEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cReferenceFactReferenceFactKeyword_1_0 = (Keyword)cReferenceFactEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAttributeFactEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAttributeFactAttributeFactKeyword_2_0 = (Keyword)cAttributeFactEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum AssetType:
		//	ObjectFact | ReferenceFact | AttributeFact;
		public EnumRule getRule() { return rule; }
		
		//ObjectFact | ReferenceFact | AttributeFact
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ObjectFact
		public EnumLiteralDeclaration getObjectFactEnumLiteralDeclaration_0() { return cObjectFactEnumLiteralDeclaration_0; }
		
		//"ObjectFact"
		public Keyword getObjectFactObjectFactKeyword_0_0() { return cObjectFactObjectFactKeyword_0_0; }
		
		//ReferenceFact
		public EnumLiteralDeclaration getReferenceFactEnumLiteralDeclaration_1() { return cReferenceFactEnumLiteralDeclaration_1; }
		
		//"ReferenceFact"
		public Keyword getReferenceFactReferenceFactKeyword_1_0() { return cReferenceFactReferenceFactKeyword_1_0; }
		
		//AttributeFact
		public EnumLiteralDeclaration getAttributeFactEnumLiteralDeclaration_2() { return cAttributeFactEnumLiteralDeclaration_2; }
		
		//"AttributeFact"
		public Keyword getAttributeFactAttributeFactKeyword_2_0() { return cAttributeFactAttributeFactKeyword_2_0; }
	}
	public class ResolutionTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.Rules.ResolutionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cRESTRICTIVEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cRESTRICTIVERestrictiveKeyword_0_0 = (Keyword)cRESTRICTIVEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPERMISSIVEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPERMISSIVEPermissiveKeyword_1_0 = (Keyword)cPERMISSIVEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ResolutionType:
		//	RESTRICTIVE='restrictive' | PERMISSIVE='permissive';
		public EnumRule getRule() { return rule; }
		
		//RESTRICTIVE='restrictive' | PERMISSIVE='permissive'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RESTRICTIVE='restrictive'
		public EnumLiteralDeclaration getRESTRICTIVEEnumLiteralDeclaration_0() { return cRESTRICTIVEEnumLiteralDeclaration_0; }
		
		//'restrictive'
		public Keyword getRESTRICTIVERestrictiveKeyword_0_0() { return cRESTRICTIVERestrictiveKeyword_0_0; }
		
		//PERMISSIVE='permissive'
		public EnumLiteralDeclaration getPERMISSIVEEnumLiteralDeclaration_1() { return cPERMISSIVEEnumLiteralDeclaration_1; }
		
		//'permissive'
		public Keyword getPERMISSIVEPermissiveKeyword_1_0() { return cPERMISSIVEPermissiveKeyword_1_0; }
	}
	
	private final ModelElements pModel;
	private final PolicyElements pPolicy;
	private final RuleElements pRule;
	private final UserElements pUser;
	private final QueryElements pQuery;
	private final AccessibilityLevelElements eAccessibilityLevel;
	private final OperationTypeElements eOperationType;
	private final AssetTypeElements eAssetType;
	private final ObjectFactElements pObjectFact;
	private final ReferenceFactElements pReferenceFact;
	private final AttributeFactElements pAttributeFact;
	private final ValueElements pValue;
	private final ResolutionTypeElements eResolutionType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public RulesGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pPolicy = new PolicyElements();
		this.pRule = new RuleElements();
		this.pUser = new UserElements();
		this.pQuery = new QueryElements();
		this.eAccessibilityLevel = new AccessibilityLevelElements();
		this.eOperationType = new OperationTypeElements();
		this.eAssetType = new AssetTypeElements();
		this.pObjectFact = new ObjectFactElements();
		this.pReferenceFact = new ReferenceFactElements();
		this.pAttributeFact = new AttributeFactElements();
		this.pValue = new ValueElements();
		this.eResolutionType = new ResolutionTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.mondo.collaboration.policy.Rules".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	policy=Policy;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Policy:
	//	'policy' name=ID & access=AccessibilityLevel & operation=OperationType 'by' 'default' '{'
	//	rules+=Rule*
	//	'}' 'with' resolution=ResolutionType 'resolution';
	public PolicyElements getPolicyAccess() {
		return pPolicy;
	}
	
	public ParserRule getPolicyRule() {
		return getPolicyAccess().getRule();
	}
	
	//Rule:
	//	'rule' name=ID & access=AccessibilityLevel & operation=OperationType 'to' user=User '{'
	//	'select' asset=AssetType
	//	'from' 'query' query=Query ('where' 'bound' 'to')?
	//	'}' ('with' priority=INT 'priority')?;
	public RuleElements getRuleAccess() {
		return pRule;
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}
	
	//User:
	//	name=ID;
	public UserElements getUserAccess() {
		return pUser;
	}
	
	public ParserRule getUserRule() {
		return getUserAccess().getRule();
	}
	
	//Query:
	//	name=STRING;
	public QueryElements getQueryAccess() {
		return pQuery;
	}
	
	public ParserRule getQueryRule() {
		return getQueryAccess().getRule();
	}
	
	//enum AccessibilityLevel:
	//	ALLOW='allow' | OBFUSCATE='obfuscate' | DENY='deny';
	public AccessibilityLevelElements getAccessibilityLevelAccess() {
		return eAccessibilityLevel;
	}
	
	public EnumRule getAccessibilityLevelRule() {
		return getAccessibilityLevelAccess().getRule();
	}
	
	//enum OperationType:
	//	READ='R' | READWRITE='RW';
	public OperationTypeElements getOperationTypeAccess() {
		return eOperationType;
	}
	
	public EnumRule getOperationTypeRule() {
		return getOperationTypeAccess().getRule();
	}
	
	//enum AssetType:
	//	ObjectFact | ReferenceFact | AttributeFact;
	public AssetTypeElements getAssetTypeAccess() {
		return eAssetType;
	}
	
	public EnumRule getAssetTypeRule() {
		return getAssetTypeAccess().getRule();
	}
	
	//ObjectFact:
	//	'obj(' object=[ecore::EObject] ',' type=[ecore::EClass] ')';
	public ObjectFactElements getObjectFactAccess() {
		return pObjectFact;
	}
	
	public ParserRule getObjectFactRule() {
		return getObjectFactAccess().getRule();
	}
	
	//ReferenceFact:
	//	'ref(' srcObject=[ecore::EObject] '->' reference=[ecore::EReference] '->' trgObject=[ecore::EObject] ')';
	public ReferenceFactElements getReferenceFactAccess() {
		return pReferenceFact;
	}
	
	public ParserRule getReferenceFactRule() {
		return getReferenceFactAccess().getRule();
	}
	
	//AttributeFact:
	//	'attr(' object=[ecore::EObject] ',' attribute=[ecore::EAttribute] ',' value=Value ')';
	public AttributeFactElements getAttributeFactAccess() {
		return pAttributeFact;
	}
	
	public ParserRule getAttributeFactRule() {
		return getAttributeFactAccess().getRule();
	}
	
	//Value:
	//	INT | STRING;
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}
	
	//enum ResolutionType:
	//	RESTRICTIVE='restrictive' | PERMISSIVE='permissive';
	public ResolutionTypeElements getResolutionTypeAccess() {
		return eResolutionType;
	}
	
	public EnumRule getResolutionTypeRule() {
		return getResolutionTypeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
