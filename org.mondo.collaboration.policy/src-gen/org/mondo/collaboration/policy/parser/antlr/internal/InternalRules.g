/*
 * generated by Xtext 2.10.0
 */
grammar InternalRules;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.mondo.collaboration.policy.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.mondo.collaboration.policy.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.mondo.collaboration.policy.services.RulesGrammarAccess;

}

@parser::members {

 	private RulesGrammarAccess grammarAccess;

    public InternalRulesParser(TokenStream input, RulesGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected RulesGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getRolesRoleParserRuleCall_0_0());
				}
				lv_roles_0_0=ruleRole
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"roles",
						lv_roles_0_0,
						"org.mondo.collaboration.policy.Rules.Role");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getPolicyPolicyParserRuleCall_1_0());
				}
				lv_policy_1_0=rulePolicy
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"policy",
						lv_policy_1_0,
						"org.mondo.collaboration.policy.Rules.Policy");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePolicy
entryRulePolicy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPolicyRule()); }
	iv_rulePolicy=rulePolicy
	{ $current=$iv_rulePolicy.current; }
	EOF;

// Rule Policy
rulePolicy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='policy'
		{
			newLeafNode(otherlv_0, grammarAccess.getPolicyAccess().getPolicyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPolicyAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPolicyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPolicyAccess().getAccessAccessibilityLevelEnumRuleCall_2_0());
				}
				lv_access_2_0=ruleAccessibilityLevel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPolicyRule());
					}
					set(
						$current,
						"access",
						lv_access_2_0,
						"org.mondo.collaboration.policy.Rules.AccessibilityLevel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPolicyAccess().getOperationOperationTypeEnumRuleCall_3_0());
				}
				lv_operation_3_0=ruleOperationType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPolicyRule());
					}
					set(
						$current,
						"operation",
						lv_operation_3_0,
						"org.mondo.collaboration.policy.Rules.OperationType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='by'
		{
			newLeafNode(otherlv_4, grammarAccess.getPolicyAccess().getByKeyword_4());
		}
		otherlv_5='default'
		{
			newLeafNode(otherlv_5, grammarAccess.getPolicyAccess().getDefaultKeyword_5());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getPolicyAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPolicyAccess().getRulesRuleParserRuleCall_7_0());
				}
				lv_rules_7_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPolicyRule());
					}
					add(
						$current,
						"rules",
						lv_rules_7_0,
						"org.mondo.collaboration.policy.Rules.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getPolicyAccess().getRightCurlyBracketKeyword_8());
		}
		otherlv_9='with'
		{
			newLeafNode(otherlv_9, grammarAccess.getPolicyAccess().getWithKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPolicyAccess().getResolutionResolutionTypeEnumRuleCall_10_0());
				}
				lv_resolution_10_0=ruleResolutionType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPolicyRule());
					}
					set(
						$current,
						"resolution",
						lv_resolution_10_0,
						"org.mondo.collaboration.policy.Rules.ResolutionType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='resolution'
		{
			newLeafNode(otherlv_11, grammarAccess.getPolicyAccess().getResolutionKeyword_11());
		}
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rule'
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getRuleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getAccessAccessibilityLevelEnumRuleCall_2_0());
				}
				lv_access_2_0=ruleAccessibilityLevel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					set(
						$current,
						"access",
						lv_access_2_0,
						"org.mondo.collaboration.policy.Rules.AccessibilityLevel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getOperationOperationTypeEnumRuleCall_3_0());
				}
				lv_operation_3_0=ruleOperationType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					set(
						$current,
						"operation",
						lv_operation_3_0,
						"org.mondo.collaboration.policy.Rules.OperationType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='to'
		{
			newLeafNode(otherlv_4, grammarAccess.getRuleAccess().getToKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getRuleAccess().getRolesRoleCrossReference_5_0());
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getRuleAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRuleRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getRuleAccess().getRolesRoleCrossReference_6_1_0());
					}
				)
			)
		)*
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_7());
		}
		otherlv_9='from'
		{
			newLeafNode(otherlv_9, grammarAccess.getRuleAccess().getFromKeyword_8());
		}
		otherlv_10='query'
		{
			newLeafNode(otherlv_10, grammarAccess.getRuleAccess().getQueryKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleRule());
					}
				}
				otherlv_11=RULE_STRING
				{
					newLeafNode(otherlv_11, grammarAccess.getRuleAccess().getPatternPatternCrossReference_10_0());
				}
			)
		)
		otherlv_12='select'
		{
			newLeafNode(otherlv_12, grammarAccess.getRuleAccess().getSelectKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getAssetAssetParserRuleCall_12_0());
				}
				lv_asset_13_0=ruleAsset
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					set(
						$current,
						"asset",
						lv_asset_13_0,
						"org.mondo.collaboration.policy.Rules.Asset");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getBindingsBindingParserRuleCall_13_0());
				}
				lv_bindings_14_0=ruleBinding
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					add(
						$current,
						"bindings",
						lv_bindings_14_0,
						"org.mondo.collaboration.policy.Rules.Binding");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_14());
		}
		(
			otherlv_16='with'
			{
				newLeafNode(otherlv_16, grammarAccess.getRuleAccess().getWithKeyword_15_0());
			}
			(
				(
					lv_priority_17_0=RULE_INT
					{
						newLeafNode(lv_priority_17_0, grammarAccess.getRuleAccess().getPriorityINTTerminalRuleCall_15_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRuleRule());
						}
						setWithLastConsumed(
							$current,
							"priority",
							lv_priority_17_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_18='priority'
			{
				newLeafNode(otherlv_18, grammarAccess.getRuleAccess().getPriorityKeyword_15_2());
			}
		)?
	)
;

// Entry rule entryRuleRole
entryRuleRole returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoleRule()); }
	iv_ruleRole=ruleRole
	{ $current=$iv_ruleRole.current; }
	EOF;

// Rule Role
ruleRole returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRoleAccess().getUserParserRuleCall_0());
		}
		this_User_0=ruleUser
		{
			$current = $this_User_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRoleAccess().getGroupParserRuleCall_1());
		}
		this_Group_1=ruleGroup
		{
			$current = $this_Group_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUser
entryRuleUser returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUserRule()); }
	iv_ruleUser=ruleUser
	{ $current=$iv_ruleUser.current; }
	EOF;

// Rule User
ruleUser returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='user'
		{
			newLeafNode(otherlv_0, grammarAccess.getUserAccess().getUserKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getUserAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleGroup
entryRuleGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupRule()); }
	iv_ruleGroup=ruleGroup
	{ $current=$iv_ruleGroup.current; }
	EOF;

// Rule Group
ruleGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='group'
		{
			newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGroupKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGroupAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getGroupAccess().getUsersUserCrossReference_3_0());
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getGroupAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getGroupAccess().getUsersUserCrossReference_4_1_0());
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAsset
entryRuleAsset returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssetRule()); }
	iv_ruleAsset=ruleAsset
	{ $current=$iv_ruleAsset.current; }
	EOF;

// Rule Asset
ruleAsset returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAssetAccess().getObjectFactParserRuleCall_0());
		}
		this_ObjectFact_0=ruleObjectFact
		{
			$current = $this_ObjectFact_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAssetAccess().getReferenceFactParserRuleCall_1());
		}
		this_ReferenceFact_1=ruleReferenceFact
		{
			$current = $this_ReferenceFact_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAssetAccess().getAttributeFactParserRuleCall_2());
		}
		this_AttributeFact_2=ruleAttributeFact
		{
			$current = $this_AttributeFact_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleObjectFact
entryRuleObjectFact returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectFactRule()); }
	iv_ruleObjectFact=ruleObjectFact
	{ $current=$iv_ruleObjectFact.current; }
	EOF;

// Rule ObjectFact
ruleObjectFact returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='obj('
		{
			newLeafNode(otherlv_0, grammarAccess.getObjectFactAccess().getObjKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectFactRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getObjectFactAccess().getVariableVariableCrossReference_1_0());
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getObjectFactAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleReferenceFact
entryRuleReferenceFact returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceFactRule()); }
	iv_ruleReferenceFact=ruleReferenceFact
	{ $current=$iv_ruleReferenceFact.current; }
	EOF;

// Rule ReferenceFact
ruleReferenceFact returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ref('
		{
			newLeafNode(otherlv_0, grammarAccess.getReferenceFactAccess().getRefKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceFactRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getReferenceFactAccess().getSourceVarVariableCrossReference_1_0());
				}
			)
		)
		otherlv_2='->'
		{
			newLeafNode(otherlv_2, grammarAccess.getReferenceFactAccess().getHyphenMinusGreaterThanSignKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceFactRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getReferenceFactAccess().getTargetVarVariableCrossReference_3_0());
				}
			)
		)
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getReferenceFactAccess().getColonKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceFactRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getReferenceFactAccess().getReferenceEReferenceCrossReference_5_0());
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getReferenceFactAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleAttributeFact
entryRuleAttributeFact returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeFactRule()); }
	iv_ruleAttributeFact=ruleAttributeFact
	{ $current=$iv_ruleAttributeFact.current; }
	EOF;

// Rule AttributeFact
ruleAttributeFact returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='attr('
		{
			newLeafNode(otherlv_0, grammarAccess.getAttributeFactAccess().getAttrKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeFactRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getAttributeFactAccess().getVariableVariableCrossReference_1_0());
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getAttributeFactAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleBinding
entryRuleBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingRule()); }
	iv_ruleBinding=ruleBinding
	{ $current=$iv_ruleBinding.current; }
	EOF;

// Rule Binding
ruleBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='where'
		{
			newLeafNode(otherlv_0, grammarAccess.getBindingAccess().getWhereKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBindingRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getBindingAccess().getVariableVariableCrossReference_1_0());
				}
			)
		)
		otherlv_2='bound'
		{
			newLeafNode(otherlv_2, grammarAccess.getBindingAccess().getBoundKeyword_2());
		}
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getBindingAccess().getToKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBindingAccess().getBindBindParserRuleCall_4_0());
				}
				lv_bind_4_0=ruleBind
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindingRule());
					}
					set(
						$current,
						"bind",
						lv_bind_4_0,
						"org.mondo.collaboration.policy.Rules.Bind");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBind
entryRuleBind returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindRule()); }
	iv_ruleBind=ruleBind
	{ $current=$iv_ruleBind.current; }
	EOF;

// Rule Bind
ruleBind returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBindAccess().getObjectBindParserRuleCall_0());
		}
		this_ObjectBind_0=ruleObjectBind
		{
			$current = $this_ObjectBind_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBindAccess().getValueBindParserRuleCall_1());
		}
		this_ValueBind_1=ruleValueBind
		{
			$current = $this_ValueBind_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleObjectBind
entryRuleObjectBind returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectBindRule()); }
	iv_ruleObjectBind=ruleObjectBind
	{ $current=$iv_ruleObjectBind.current; }
	EOF;

// Rule ObjectBind
ruleObjectBind returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='object'
		{
			newLeafNode(otherlv_0, grammarAccess.getObjectBindAccess().getObjectKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectBindRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getObjectBindAccess().getObjectEObjectCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleValueBind
entryRuleValueBind returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueBindRule()); }
	iv_ruleValueBind=ruleValueBind
	{ $current=$iv_ruleValueBind.current; }
	EOF;

// Rule ValueBind
ruleValueBind returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='value'
		{
			newLeafNode(otherlv_0, grammarAccess.getValueBindAccess().getValueKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getValueBindAccess().getValueValueTypeEnumRuleCall_1_0());
				}
				lv_value_1_0=ruleValueType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueBindRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.mondo.collaboration.policy.Rules.ValueType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule ValueType
ruleValueType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='STRING'
			{
				$current = grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='INT'
			{
				$current = grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule AccessibilityLevel
ruleAccessibilityLevel returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='allow'
			{
				$current = grammarAccess.getAccessibilityLevelAccess().getALLOWEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAccessibilityLevelAccess().getALLOWEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='deny'
			{
				$current = grammarAccess.getAccessibilityLevelAccess().getDENYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAccessibilityLevelAccess().getDENYEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule OperationType
ruleOperationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='R'
			{
				$current = grammarAccess.getOperationTypeAccess().getREADEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperationTypeAccess().getREADEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='W'
			{
				$current = grammarAccess.getOperationTypeAccess().getWRITEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperationTypeAccess().getWRITEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='RW'
			{
				$current = grammarAccess.getOperationTypeAccess().getREADWRITEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOperationTypeAccess().getREADWRITEEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule ResolutionType
ruleResolutionType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='restrictive'
			{
				$current = grammarAccess.getResolutionTypeAccess().getRESTRICTIVEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getResolutionTypeAccess().getRESTRICTIVEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='permissive'
			{
				$current = grammarAccess.getResolutionTypeAccess().getPERMISSIVEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getResolutionTypeAccess().getPERMISSIVEEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
