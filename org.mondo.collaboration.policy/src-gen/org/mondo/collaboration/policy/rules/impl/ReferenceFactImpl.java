/**
 * generated by Xtext 2.10.0
 */
package org.mondo.collaboration.policy.rules.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.mondo.collaboration.policy.rules.Parameter;
import org.mondo.collaboration.policy.rules.ReferenceFact;
import org.mondo.collaboration.policy.rules.RulesPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Reference Fact</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.mondo.collaboration.policy.rules.impl.ReferenceFactImpl#getSourceParam <em>Source Param</em>}</li>
 *   <li>{@link org.mondo.collaboration.policy.rules.impl.ReferenceFactImpl#getTargetParam <em>Target Param</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ReferenceFactImpl extends AssetImpl implements ReferenceFact
{
  /**
   * The cached value of the '{@link #getSourceParam() <em>Source Param</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSourceParam()
   * @generated
   * @ordered
   */
  protected Parameter sourceParam;

  /**
   * The cached value of the '{@link #getTargetParam() <em>Target Param</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTargetParam()
   * @generated
   * @ordered
   */
  protected Parameter targetParam;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ReferenceFactImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RulesPackage.Literals.REFERENCE_FACT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Parameter getSourceParam()
  {
    return sourceParam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSourceParam(Parameter newSourceParam, NotificationChain msgs)
  {
    Parameter oldSourceParam = sourceParam;
    sourceParam = newSourceParam;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RulesPackage.REFERENCE_FACT__SOURCE_PARAM, oldSourceParam, newSourceParam);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSourceParam(Parameter newSourceParam)
  {
    if (newSourceParam != sourceParam)
    {
      NotificationChain msgs = null;
      if (sourceParam != null)
        msgs = ((InternalEObject)sourceParam).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RulesPackage.REFERENCE_FACT__SOURCE_PARAM, null, msgs);
      if (newSourceParam != null)
        msgs = ((InternalEObject)newSourceParam).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RulesPackage.REFERENCE_FACT__SOURCE_PARAM, null, msgs);
      msgs = basicSetSourceParam(newSourceParam, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RulesPackage.REFERENCE_FACT__SOURCE_PARAM, newSourceParam, newSourceParam));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Parameter getTargetParam()
  {
    return targetParam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTargetParam(Parameter newTargetParam, NotificationChain msgs)
  {
    Parameter oldTargetParam = targetParam;
    targetParam = newTargetParam;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RulesPackage.REFERENCE_FACT__TARGET_PARAM, oldTargetParam, newTargetParam);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTargetParam(Parameter newTargetParam)
  {
    if (newTargetParam != targetParam)
    {
      NotificationChain msgs = null;
      if (targetParam != null)
        msgs = ((InternalEObject)targetParam).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RulesPackage.REFERENCE_FACT__TARGET_PARAM, null, msgs);
      if (newTargetParam != null)
        msgs = ((InternalEObject)newTargetParam).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RulesPackage.REFERENCE_FACT__TARGET_PARAM, null, msgs);
      msgs = basicSetTargetParam(newTargetParam, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RulesPackage.REFERENCE_FACT__TARGET_PARAM, newTargetParam, newTargetParam));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RulesPackage.REFERENCE_FACT__SOURCE_PARAM:
        return basicSetSourceParam(null, msgs);
      case RulesPackage.REFERENCE_FACT__TARGET_PARAM:
        return basicSetTargetParam(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RulesPackage.REFERENCE_FACT__SOURCE_PARAM:
        return getSourceParam();
      case RulesPackage.REFERENCE_FACT__TARGET_PARAM:
        return getTargetParam();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RulesPackage.REFERENCE_FACT__SOURCE_PARAM:
        setSourceParam((Parameter)newValue);
        return;
      case RulesPackage.REFERENCE_FACT__TARGET_PARAM:
        setTargetParam((Parameter)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RulesPackage.REFERENCE_FACT__SOURCE_PARAM:
        setSourceParam((Parameter)null);
        return;
      case RulesPackage.REFERENCE_FACT__TARGET_PARAM:
        setTargetParam((Parameter)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RulesPackage.REFERENCE_FACT__SOURCE_PARAM:
        return sourceParam != null;
      case RulesPackage.REFERENCE_FACT__TARGET_PARAM:
        return targetParam != null;
    }
    return super.eIsSet(featureID);
  }

} //ReferenceFactImpl
