grammar org.mondo.collaboration.policy.Rules with org.eclipse.xtext.common.Terminals

generate rules "http://www.mondo.org/collaboration/policy/Rules"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.eclipse.org/viatra/query/patternlanguage/PatternLanguage" as iql

Model:
	//(instanceModel=InstanceModel)?
	roles+=Role*
	policy=Policy;
	
/*InstanceModel:
	'import' importURI=STRING;*/
	
Role:
	User | Group;
	
User:
	'user' name=ID;
	
Group:
	'group' name=ID '{'  users+=[User] (',' users+=[User])* '}'
;
	
Policy:
	'policy' name=ID access=AccessibilityLevel operation=OperationType 'by' 'default' '{'
	rules+=Rule*
	'}' 'with' resolution=ResolutionType 'resolution';
	
Rule:
	'rule' name=ID constraint=RuleConstraint 'to' roles+=[Role] (',' roles+=[Role])* '{'
	'from' 'query' pattern=[iql::Pattern|STRING]
	'select' asset=Asset
	bindings+=Binding*
	'}' ('with' priority=INT 'priority')?;

RuleConstraint:
	access=AccessibilityLevel operation=OperationType | {RuleConstraint} 'obfuscate'
;
	
Asset:
	ObjectFact | ReferenceFact | AttributeFact;
	
ObjectFact:
	'obj' '(' variable=[iql::Variable] ')';
	
ReferenceFact:
	'ref' '(' sourceVar=[iql::Variable] '->' targetVar=[iql::Variable] ':' reference=[ecore::EReference] ')';
	
AttributeFact:
	'attr' '(' variable=[iql::Variable] ':' attribute=[ecore::EAttribute] ')';
	
Binding:
	'where' variable=[iql::Variable] 'is' 'bound' 'to' bind=Bind;
	
Bind:
	STRING | INT;
	
enum AccessibilityLevel:
	ALLOW='allow' | DENY='deny';
	
enum OperationType:
	READ='R' | WRITE='W' | READWRITE='RW';
	
enum ResolutionType:
	RESTRICTIVE='restrictive' | PERMISSIVE='permissive';
	
/*Bind:
	ObjectBind | EnumBind | ValueBind;

ObjectBind:
	'object' object=[ecore::EObject];
	
EnumBind:
	'enum' enumliteral=[ecore::EEnumLiteral];
	
ValueBind:
	'value' value=ValueType;

enum ValueType:
	STRING | INT;*/
